var N=null,E="",T="t",U="u",searchIndex={};
var R=["amafatt","request","string","rootrenderingcomponent","vdomweak","amafatt::rootrenderingmod","result","amafatt::isocountriesmod","try_from","try_into","borrow_mut","formatter","deserialize","serialize","RootRenderingComponent"];
searchIndex["amafatt"]={"doc":"amafatt - processes the data from Amazon txt file and send…","i":[[5,"wasm_bindgen_start",R[0],"this is the start function that wasm_bindgen calls",N,[[]]],[5,"log1",E,"simple console write with a string",N,[[["str"]]]],[0,"fetchmod",E,"fetchmod - isolate/encapsulate fetch api in a module…",N,N],[5,"fetch_response","amafatt::fetchmod","The only public function that starts the code flow around…",N,[[["fn"],[R[1]],[R[2]],[R[4]]]]],[0,"reqbodymod",R[0],"reqbodymod - all request body are created in this module…",N,N],[5,"create_webrequest_from_rrc","amafatt::reqbodymod","create web request from rrc",N,[[[R[3]]],[R[1]]]],[5,"create_webrequest",E,"create web request from string",N,[[[R[2]]],[R[1]]]],[5,"create_reqbody_info",E,"create reqbody for info",N,[[[R[3]]]]],[5,"create_reqbody_ricevute_nuovo",E,"create reqbody for ricevute nuovo",N,[[[R[3]]]]],[5,"articolo_template",E,"get articolo template",N,[[],[R[2]]]],[0,"rootrenderingmod",R[0],"rootrenderingmod - Root Rendering Component is the base…",N,N],[3,R[14],R[5],"the struct with the only mutable data and the code for…",N,N],[12,"api_owner",E,E,0,N],[12,"api_uid",E,E,0,N],[12,"api_key",E,E,0,N],[12,"url",E,E,0,N],[12,"tipo_doc",E,E,0,N],[12,"amazon_txt_disabled",E,E,0,N],[12,"amazon_txt",E,E,0,N],[12,"vec_rec",E,E,0,N],[12,"vec_order_id",E,E,0,N],[12,"reqbody",E,E,0,N],[12,"respbody",E,E,0,N],[5,"div_credentials",E,"render html for credentials",N,[[["bump"],[R[3]]],["node"]]],[5,"update_rrc_respbody",E,"change respbody and pretty json",N,[[[R[2]],[R[3]]]]],[5,"replace_product_name",E,"in rrs.reqbody replace a placeholder with a new value…",N,[[[R[2]],[R[3]]]]],[17,"_IMPL_SERIALIZE_FOR_RootRenderingComponent",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RootRenderingComponent",E,E,N,N],[11,"new",E,"constructor",0,[[],[R[3]]]],[0,"amazonmod",R[0],"amazonmod - generic HashMap to deserialize the amazon csv  ",N,N],[5,"amazon_txt_create_vector_of_order_id","amafatt::amazonmod","extract a vector of order_id to draw buttons for…",N,[[["str"],[R[3]]]]],[5,"amazon_single_order_id_process",E,"process one order-id and modify request json",N,[[[R[4]],["str"],[R[3]]]]],[5,"replace_sku_name",E,"replace sku name and find product-name from webservice",N,[[["usize"],[R[2]],[R[4]],[R[3]]]]],[5,"replace_ship_county_dependent",E,"some data are dependent of the ship_country",N,[[[R[2]],["hashmap"],[R[3]]]]],[6,"Record",E,E,N,N],[0,"isocountriesmod",R[0],"isocountriesmod - country names and iso code  ",N,N],[3,"Country",R[7],E,N,N],[12,"name",E,E,1,N],[12,"code",E,E,1,N],[5,"get_country_name",E,"get the name from this json",N,[[["str"]],[R[2]]]],[17,"_IMPL_SERIALIZE_FOR_Country",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Country",E,E,N,N],[0,"credentialsmod",R[0],"credentialsmod.rs - the credentials are saved in the…",N,N],[5,"save_credentials_to_localstorage","amafatt::credentialsmod","save credentials from html input elements to local storage…",N,[[[R[4]]]]],[5,"load_credentials",E,"load credentials from local storage, returns tuple with 3…",N,[[]]],[11,"from",R[5],E,0,[[[T]],[T]]],[11,"to_owned",E,E,0,[[["self"]],[T]]],[11,"clone_into",E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,R[8],E,E,0,[[[U]],[R[6]]]],[11,R[9],E,E,0,[[],[R[6]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,"type_id",E,E,0,[[["self"]],["typeid"]]],[11,"as_any",E,E,0,[[["self"]],["any"]]],[11,"as_any_mut",E,E,0,[[["self"]],["any"]]],[11,"from",R[7],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[8],E,E,1,[[[U]],[R[6]]]],[11,R[9],E,E,1,[[],[R[6]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,"type_id",E,E,1,[[["self"]],["typeid"]]],[11,"clone",R[5],E,0,[[["self"]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[6]]]],[11,"fmt",R[7],E,1,[[["self"],[R[11]]],[R[6]]]],[11,R[12],R[5],E,0,[[["__d"]],[R[6]]]],[11,R[12],R[7],E,1,[[["__d"]],[R[6]]]],[11,R[13],R[5],E,0,[[["self"],["__s"]],[R[6]]]],[11,R[13],R[7],E,1,[[["self"],["__s"]],[R[6]]]],[11,"render",R[5],"render",0,[[["bump"],["self"]],["node"]]]],"p":[[3,R[14]],[3,"Country"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);